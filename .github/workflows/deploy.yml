name: Deploy to production

on:
  push:
    branches: [ main ]

jobs:

  continuous-integration:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2


    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1


    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1


    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: macroseat
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
    
  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEPLOY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEPLOY }}
        aws-region: us-east-1
      
      
    - name: Create CodeDeploy Deployment
      id: deploy
      run: |
        aws deploy create-deployment \
          --application-name macroseat_application \
          --deployment-group-name development_group \
          --revision GitHub \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --github-location repository=${{ github.repository }},commitId=${{ github.sha }}